fn main() {
    fn main() {
        let code = String::from("++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.---.>++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++..>+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.>++++++++++++++++++++++++++++++++.+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++.--------.+++.<<.<-.");
        let mut i: usize = 0;
        let mut cells: [u8; 25] = [0; 25];

        // one liner begin
        println!(
            "{}",
            code.chars()
                .map(|c| {
                    let mut x: u8 = 0;
                    match c {
                        '>' => i += 1,
                        '<' => i -= 1,
                        '+' => {
                            if cells[i] == 255 {
                                cells[i] = 0;
                            } else {
                                cells[i] += 1
                            }
                        }
                        '-' => {
                            if cells[i] == 0 {
                                cells[i] = 255;
                            } else {
                                cells[i] -= 1;
                            }
                        }
                        '.' => x = cells[i],
                        _ => x = 0,
                    }
                    x as char
                })
                .filter(|c| *c != '\0')
                .collect::<String>()
        );
    }
}
